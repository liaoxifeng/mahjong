%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.4.0

-ifndef(pt_common).
-define(pt_common, true).

-define(pt_common_gpb_version, "4.4.0").

-ifndef('C2S_LOGIN_PB_H').
-define('C2S_LOGIN_PB_H', true).
-record('C2S_Login',
        {token                  :: iolist()         % = 1
        }).
-endif.

-ifndef('S2C_LOGIN_PB_H').
-define('S2C_LOGIN_PB_H', true).
-record('S2C_Login',
        {id                     :: iolist(),        % = 1
         nickname               :: iolist(),        % = 3
         money                  :: non_neg_integer() % = 4, 32 bits
        }).
-endif.

-ifndef('S2C_ERR_PB_H').
-define('S2C_ERR_PB_H', true).
-record('S2C_Err',
        {code                   :: 'E_S2CErrCode_Succ' | 'E_S2CErrCode_Sys' | 'E_S2CErrCode_Busy' | 'E_S2CErrCode_OpToFrequency' | 'E_S2CErrCode_ReLogin' | 'E_S2CErrCode_NotLogin' | 'E_S2CErrCode_LoginCheckTimeout' | 'E_S2CErrCode_LoginCheckNotThrough' | 'E_S2CErrCode_ErrArgs' | 'E_S2CErrCode_ProtoErr' | 'E_S2CErrCode_LoginTokenInvalid' | 'E_S2CErrCode_BeKicked' | 'E_S2CErrCode_NotEnoughMoney' | integer(), % = 1, enum EnumS2CErrCode
         type                   :: 'E_S2CTipsShowType_PopUp' | 'E_S2CTipsShowType_Marquee' | integer(), % = 2, enum EnumS2CTipsShowType
         msg                    :: iolist()         % = 3
        }).
-endif.

-ifndef('S2C_PLAYERINFO_PB_H').
-define('S2C_PLAYERINFO_PB_H', true).
-record('S2C_PlayerInfo',
        {moneyLeft              :: non_neg_integer() % = 2, 32 bits
        }).
-endif.

-ifndef('C2S_HEARTBEAT_PB_H').
-define('C2S_HEARTBEAT_PB_H', true).
-record('C2S_Heartbeat',
        {
        }).
-endif.

-ifndef('S2C_HEARTBEAT_PB_H').
-define('S2C_HEARTBEAT_PB_H', true).
-record('S2C_Heartbeat',
        {
        }).
-endif.

-ifndef('C2S_GM_PB_H').
-define('C2S_GM_PB_H', true).
-record('C2S_Gm',
        {cmd                    :: iolist(),        % = 1
         seqId                  :: integer(),       % = 2, 32 bits
         arg1                   :: iolist() | undefined, % = 11
         arg2                   :: iolist() | undefined, % = 12
         arg3                   :: iolist() | undefined, % = 13
         arg4                   :: iolist() | undefined, % = 14
         arg5                   :: iolist() | undefined, % = 15
         arg6                   :: iolist() | undefined, % = 16
         arg7                   :: iolist() | undefined, % = 17
         arg8                   :: iolist() | undefined, % = 18
         arg9                   :: iolist() | undefined % = 19
        }).
-endif.

-ifndef('S2C_GM_PB_H').
-define('S2C_GM_PB_H', true).
-record('S2C_Gm',
        {seqId                  :: integer(),       % = 2, 32 bits
         code                   :: integer()        % = 3, 32 bits
        }).
-endif.

-endif.
